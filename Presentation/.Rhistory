youtubedata <- read.csv("youtube_data.cscv")
youtubedata <- read.csv("youtube_data.csv")
youtubedata <- read.csv("youtube_data.csv")
library(readxl)
youtubedata <- read_xlsx("youtubedata.xlsx")
View(youtubedata)
youtubedata$views_numeric <- as.numeric(youtubedata$views_numeric)
youtubedata$duration_numeric <- as.numeric(youtubedata$hours...9)*3600+as.numeric(youtubedata$minutes...10)*60+as.numeric(youtubedata$seconds...11)
youtubedata <- read_xlsx("youtubedata.xlsx")
youtubedata$duration_numeric <- as.numeric(youtubedata$hours)*3600+as.numeric(youtubedata$minutes)*60+as.numeric(youtubedata$seconds)
library(dplyr)
library(stringr)
youtubedata <- youtubedata %>%
mutate(
timeaxis = case_when(
str_detect(date_word, "year")  ~ as.numeric(date_numeric) * 365,
str_detect(date_word, "month") ~ as.numeric(date_numeric) * 30,
str_detect(date_word, "week")  ~ as.numeric(date_numeric) * 7,
str_detect(date_word, "day")   ~ as.numeric(date_numeric),
TRUE ~ NA_real_  # Default case to handle unexpected values
)
)
plot(youtubedata$timeaxis,youtubedata$duration_numeric)
youtubedata$year_timeaxis <- rounddown(youtubedata$timeaxis / 12)
youtubedata$month_timeaxis <- floor(youtubedata$timeaxis / 30)
plot(youtubedata$month_timeaxis,youtubedata$month_timeaxis)
hist(youtubedata$month_timeaxis)
library(ggplot2)
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (Days)",
y = "Duration (Numeric)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days)",
y = "Duration (in seconds)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days ago)",
y = "Duration (in seconds)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months",
y = "Frequency"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 3, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months",
y = "Frequency"
) +
theme_minimal()
table(youtubedata$month_timeaxis)
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 12, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months",
y = "Frequency"
) +
theme_minimal()
youtubedata$month_timeaxis <- floor(youtubedata$timeaxis / 365)
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months (in 12 month bins)",
y = "Frequency"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded",
x = "Years",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Years",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Years ago",
y = "Amount of Videos uploaded"
) +
theme_minimal()
youtubedata$year_timeaxis <- 2025-youtubedata$month_timeaxis
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Years ago",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Year",
y = "Amount of Videos uploaded"
) +
theme_minimal()
scraped <- read.csv("scraped.csv")
scraped <- read_xlsx("scraped.xlsx")
View(scraped)
library(stringr)
emoji_pattern <- "[\U0001F300-\U0001F6FF\U0001F900-\U0001F9FF\U0001F000-\U0001F02F]"
df_with_emojis <- scraped %>%
filter(str_detect(text_column, emoji_pattern))
df_with_emojis <- scraped %>%
filter(str_detect(Description, emoji_pattern))
View(df_with_emojis)
