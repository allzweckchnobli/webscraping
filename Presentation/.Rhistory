youtubedata <- read.csv("youtube_data.cscv")
youtubedata <- read.csv("youtube_data.csv")
youtubedata <- read.csv("youtube_data.csv")
library(readxl)
youtubedata <- read_xlsx("youtubedata.xlsx")
View(youtubedata)
youtubedata$views_numeric <- as.numeric(youtubedata$views_numeric)
youtubedata$duration_numeric <- as.numeric(youtubedata$hours...9)*3600+as.numeric(youtubedata$minutes...10)*60+as.numeric(youtubedata$seconds...11)
youtubedata <- read_xlsx("youtubedata.xlsx")
youtubedata$duration_numeric <- as.numeric(youtubedata$hours)*3600+as.numeric(youtubedata$minutes)*60+as.numeric(youtubedata$seconds)
library(dplyr)
library(stringr)
youtubedata <- youtubedata %>%
mutate(
timeaxis = case_when(
str_detect(date_word, "year")  ~ as.numeric(date_numeric) * 365,
str_detect(date_word, "month") ~ as.numeric(date_numeric) * 30,
str_detect(date_word, "week")  ~ as.numeric(date_numeric) * 7,
str_detect(date_word, "day")   ~ as.numeric(date_numeric),
TRUE ~ NA_real_  # Default case to handle unexpected values
)
)
plot(youtubedata$timeaxis,youtubedata$duration_numeric)
youtubedata$year_timeaxis <- rounddown(youtubedata$timeaxis / 12)
youtubedata$month_timeaxis <- floor(youtubedata$timeaxis / 30)
plot(youtubedata$month_timeaxis,youtubedata$month_timeaxis)
hist(youtubedata$month_timeaxis)
library(ggplot2)
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (Days)",
y = "Duration (Numeric)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days)",
y = "Duration (in seconds)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days ago)",
y = "Duration (in seconds)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months",
y = "Frequency"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 3, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months",
y = "Frequency"
) +
theme_minimal()
table(youtubedata$month_timeaxis)
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 12, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months",
y = "Frequency"
) +
theme_minimal()
youtubedata$month_timeaxis <- floor(youtubedata$timeaxis / 365)
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Distribution of Month Time Axis",
x = "Months (in 12 month bins)",
y = "Frequency"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded",
x = "Years",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Years",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = month_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Years ago",
y = "Amount of Videos uploaded"
) +
theme_minimal()
youtubedata$year_timeaxis <- 2025-youtubedata$month_timeaxis
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Years ago",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Year",
y = "Amount of Videos uploaded"
) +
theme_minimal()
scraped <- read.csv("scraped.csv")
scraped <- read_xlsx("scraped.xlsx")
View(scraped)
library(stringr)
emoji_pattern <- "[\U0001F300-\U0001F6FF\U0001F900-\U0001F9FF\U0001F000-\U0001F02F]"
df_with_emojis <- scraped %>%
filter(str_detect(text_column, emoji_pattern))
df_with_emojis <- scraped %>%
filter(str_detect(Description, emoji_pattern))
View(df_with_emojis)
scraped <- read_xlsx("scraped.xlsx")
install.packages("readxl")
library(readxl)
library(dplyr)
library(stringr)
library(ggplot2)
library(stringr)
youtubedata <- read_xlsx("youtubedata.xlsx")
youtubedata$views_numeric <- as.numeric(youtubedata$views_numeric)
youtubedata$duration_numeric <- as.numeric(youtubedata$hours)*3600+as.numeric(youtubedata$minutes)*60+as.numeric(youtubedata$seconds)
youtubedata <- youtubedata %>%
mutate(
timeaxis = case_when(
str_detect(date_word, "year")  ~ as.numeric(date_numeric) * 365,
str_detect(date_word, "month") ~ as.numeric(date_numeric) * 30,
str_detect(date_word, "week")  ~ as.numeric(date_numeric) * 7,
str_detect(date_word, "day")   ~ as.numeric(date_numeric),
TRUE ~ NA_real_  # Default case to handle unexpected values
)
)
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days ago)",
y = "Duration (in seconds)"
) +
theme_minimal()
youtubedata$month_timeaxis <- floor(youtubedata$timeaxis / 365)
youtubedata$year_timeaxis <- 2025-youtubedata$month_timeaxis
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Year",
y = "Amount of Videos uploaded"
) +
theme_minimal()
scraped <- read_xlsx("scraped.xlsx")
emoji_pattern <- "[\U0001F300-\U0001F6FF\U0001F900-\U0001F9FF\U0001F000-\U0001F02F]"
scraped_with_emojis <- scraped %>%
filter(str_detect(Description, emoji_pattern))
write.txt(scraped,"scraped.txt")
descriptions <- scraped %>% select(Description)
write.table(scraped,"scraped.txt")
write.table(descriptions,"descriptions.txt")
View(scraped)
scraped <- scraped %>%
mutate(
title = case_when(
str_detect(Name, "Prof") ~ "Prof.",
TRUE ~ "Dr."
)
)
scraped <- scraped %>%
mutate(
title = case_when(
str_detect(Name, "Prof") ~ "Prof.",
TRUE ~ "Dr."
)
) %>% mutate(
position = case_when(
str_detect(lowercase(Title...6), "snf") ~ "SNF Professor",
str_detect(Title...6, "Ord") ~"Ordinarius / Ordinaria",
str_detect(Title...6, "Assist")
)
)
scraped <- scraped %>%
mutate(
title = case_when(
str_detect(Name, "Prof") ~ "Prof.",
TRUE ~ "Dr."
)
) %>% mutate(
position = case_when(
str_detect(lowercase(Title...6), "snf") ~ "SNF Professor",
str_detect(Title...6, "Ord") ~"Ordinarius / Ordinaria",
str_detect(Title...6, "Assist") ~ "Assistant Professor"
)
)
scraped <- scraped %>%
mutate(
title = case_when(
str_detect(Name, "Prof") ~ "Prof.",
TRUE ~ "Dr."
)
) %>% mutate(
position = case_when(
str_detect(tolower(Title...6), "snf") ~ "SNF Professor",
str_detect(tolower(Title...6), "ord") ~"Ordinarius / Ordinaria",
str_detect(tolower(Title...6), "assist") ~ "Assistant Professor",
TRUE ~ "Other"
)
)
scraped <- scraped %>% filter(
!is.na(Link)
) %>% mutate(
title = case_when(
str_detect(Name, "Prof") ~ "Prof.",
TRUE ~ "Dr."
)
) %>% mutate(
position = case_when(
str_detect(tolower(Title...6), "snf") ~ "SNF Professor",
str_detect(tolower(Title...6), "ord") ~"Ordinarius / Ordinaria",
str_detect(tolower(Title...6), "assist") ~ "Assistant Professor",
TRUE ~ "Other"
)
)
## length
scraped$length_desc <- nchar(scraped$Description)
plot(scraped$length_desc)
plot(scraped$length_desc,names=scraped$Subtitle)
scraped <- scraped %>% arrange(desc(length_desc))
ggplot(scraped, aes(x = reorder(subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot points
geom_text(aes(label = subtitle), vjust = -0.5) + # Add text labels
labs(x = "Subtitle", y = "Length", title = "Descending Length Plot") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot points
geom_text(aes(label = Subtitle), vjust = -0.5) + # Add text labels
labs(x = "Subtitle", y = "Length", title = "Descending Length Plot") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot points
geom_text(aes(label = Subtitle), vjust = -0.5) + # Add text labels
labs(x = "Subtitle", y = "Length", title = "Descending Length Plot") +
theme_minimal()
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot points
geom_text(aes(label = Subtitle), vjust = -0.5) + # Add text labels
labs(x = "Subtitle", y = "Length", title = "Descending Length Plot") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Remove x-axis text
axis.ticks.x = element_blank())
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot points
geom_text(aes(label = Subtitle), vjust = -0.5) + # Add text labels
labs(x = "Rank", y = "Length", title = "Descending Length Plot") +
theme_minimal() +
theme(axis.text.x = element_blank(),  # Remove x-axis text
axis.ticks.x = element_blank())
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot point
labs(x = "Subtitle", y = "Length", title = "Descending Length Plot") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot point
labs(x = "Subtitle", y = "Length", title = "Descending Length Plot") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot point
labs(x = "Subtitle", y = "Length", title = "Length of Description by Department") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "blue", size = 3) +   # Plot point
labs(x = "Subtitle", y = "Length (words)", title = "Length of Description by Department") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(scraped, aes(x = reorder(Subtitle, -length_desc), y = length_desc)) +
geom_point(color = "#0028A5", size = 3) +   # Plot point
labs(x = "Subtitle", y = "Length (words)", title = "Length of Description by Department") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave("lengthdesc.svg",height=6,width=9)
install.packages("svglite")
ggsave("lengthdesc.svg",height=6,width=9)
hist(scraped$position)
plot(scraped$position)
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "blue") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days ago)",
y = "Duration (in seconds)"
) +
theme_minimal()
ggplot(youtubedata, aes(x = timeaxis, y = duration_numeric)) +
geom_point(alpha = 0.6, color = "#4AC9E3") +  # Scatter plot with transparency
labs(
title = "Time Axis vs Duration",
x = "Time Axis (in days ago)",
y = "Duration (in seconds)"
) +
theme_minimal()
ggsave("durationacrosstime.svg",height=6,width=9)
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Year",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "#7596FF", color = "#001E7C", alpha = 0.7) +
labs(
title = "Amounts of videos uploaded per year",
x = "Year",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggplot(youtubedata, aes(x = year_timeaxis)) +
geom_histogram(binwidth = 1, fill = "#7596FF", color = "#001E7C", alpha = 1) +
labs(
title = "Amounts of videos uploaded per year",
x = "Year",
y = "Amount of Videos uploaded"
) +
theme_minimal()
ggsave("videosuploaded.svg",height=6,width=9)
![](durationacrosstime.svg)
![](images/durationacrosstime.svg)
![](images/cbdr_nohighlights.png)
